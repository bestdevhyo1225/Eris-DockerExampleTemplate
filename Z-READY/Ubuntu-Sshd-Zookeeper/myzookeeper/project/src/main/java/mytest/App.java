/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package mytest;

import org.apache.zookeeper.*;

import java.io.IOException;
import java.util.List;

import static org.apache.zookeeper.AsyncCallback.*;

public class App implements Watcher, ChildrenCallback, Runnable {
    public static final String ZOOKEEPER_SERVER_IP = "localhost:12181";
    private ZooKeeper zk;
    private boolean dead;

    public void initializeSession() {
        try {
            zk = new ZooKeeper(ZOOKEEPER_SERVER_IP, 3000, this);
            zk.create("/client/kukaro", "테스트 데이터입니다".getBytes(),
                    ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);
            zk.getChildren("/client", true, this, null);
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InterruptedException e) {
            e.printStackTrace();
        } catch (KeeperException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void process(WatchedEvent event) {
        String path = event.getPath();
        String eventType = event.getType().name();
        String eventState = event.getState().name();
        System.out.format("## process: path: %s, eventType: %s, eventState:%s\n", path, eventType, eventState);
        if (event.getType() == Event.EventType.NodeChildrenChanged) {
            zk.getChildren("/client", true, this, null);
        }
    }

    @Override
    public void processResult(int rc, String path, Object ctx, List<String> children) {
        System.out.println("## processResult");
        System.out.println(children.size());
        for (String child : children) {
            byte[] data = null;
            try {
                data = zk.getData("/client/" + child, false, null);
            } catch (KeeperException e) {
                e.printStackTrace();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println("rc = " + rc + ", path = " + path + ", ctx = " + ctx + ", children = " + children + ", data = " + new String(data));
        }
    }

    @Override
    public void run() {
        try {
            synchronized (this) {
                while (!dead) {
                    wait();
                }
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        App app = new App();
        app.initializeSession();
        app.run();
    }
}
